apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Release.Name }}-nginx-config
  labels:
    app: {{ $.Release.Name }}-nginx
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        # Map for admin authentication - DRY approach
        map $http_x_admin_secret $admin_allowed {
            default 0;
            "my-demo-secret-2025" 1;
        }

        upstream dotnet {
            server {{ $.Release.Name }}-dotnet:5000;
        }

        upstream nodejs {
            server {{ $.Release.Name }}-nodejs:5001;
        }

        upstream python {
            server {{ $.Release.Name }}-python:5002;
        }

        upstream java {
            server {{ $.Release.Name }}-java:5003;
        }

        upstream go {
            server {{ $.Release.Name }}-go:5004;
        }

        upstream rust {
            server {{ $.Release.Name }}-rust:5005;
        }

        upstream websocket {
            server {{ $.Release.Name }}-websocket:8081;
        }

        server {
            listen 80;
            server_name localhost;

            # Blocked page for unauthorized access
            location = /blocked {
                proxy_pass http://dotnet/blocked;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Default route to .NET
            location = / {
                proxy_pass http://dotnet;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Canvas routes (default to .NET)
            location = /canvas {
                proxy_pass http://dotnet/canvas;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Join page route (default to .NET)
            location = /join {
                proxy_pass http://dotnet/join;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Registration page route (default to .NET)
            location = /registration {
                proxy_pass http://dotnet/registration;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Admin page route (default to .NET) - WITH SECRET HEADER
            location = /admin {
                if ($admin_allowed = 0) {
                    return 302 /blocked;
                }

                proxy_pass http://dotnet/admin;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Node.js routes
            location = /nodejs {
                proxy_pass http://nodejs/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /nodejs/canvas {
                proxy_pass http://nodejs/canvas;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /nodejs/registration {
                proxy_pass http://nodejs/registration;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /nodejs/admin {
                if ($admin_allowed = 0) {
                    return 302 /blocked;
                }

                proxy_pass http://nodejs/admin;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Python routes
            location = /python {
                proxy_pass http://python/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /python/canvas {
                proxy_pass http://python/canvas;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /python/registration {
                proxy_pass http://python/registration;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /python/admin {
                if ($admin_allowed = 0) {
                    return 302 /blocked;
                }

                proxy_pass http://python/admin;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Java routes
            location = /java {
                proxy_pass http://java/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /java/canvas {
                proxy_pass http://java/canvas;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /java/registration {
                proxy_pass http://java/registration;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /java/admin {
                if ($admin_allowed = 0) {
                    return 302 /blocked;
                }

                proxy_pass http://java/admin;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Go routes
            location = /go {
                proxy_pass http://go/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /go/canvas {
                proxy_pass http://go/canvas;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /go/registration {
                proxy_pass http://go/registration;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /go/admin {
                if ($admin_allowed = 0) {
                    return 302 /blocked;
                }

                proxy_pass http://go/admin;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Rust routes
            location = /rust {
                proxy_pass http://rust/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /rust/canvas {
                proxy_pass http://rust/canvas;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /rust/registration {
                proxy_pass http://rust/registration;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /rust/admin {
                if ($admin_allowed = 0) {
                    return 302 /blocked;
                }

                proxy_pass http://rust/admin;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

        }

        # WebSocket server on port 8081
        server {
            listen 8081;
            server_name localhost;

            location / {
                proxy_pass http://websocket;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 86400;
            }
        }
    }
