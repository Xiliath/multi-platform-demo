name: Release Helm Charts

on:
  push:
    branches:
      - main
    paths:
      - 'helm/**'
  workflow_dispatch:  # Allow manual trigger

jobs:
  release:
    permissions:
      contents: write
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Prepare gh-pages branch
        run: |
          # Check if gh-pages branch exists
          if ! git ls-remote --exit-code --heads origin gh-pages; then
            echo "Creating gh-pages branch..."
            git checkout --orphan gh-pages
            git rm -rf .

            # Create .nojekyll to disable Jekyll processing
            touch .nojekyll

            # Create initial index.html
            cat > index.html <<EOF
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="UTF-8">
              <meta http-equiv="refresh" content="0; url=https://github.com/${{ github.repository }}">
              <title>Redirecting...</title>
          </head>
          <body>
              <p>Redirecting to <a href="https://github.com/${{ github.repository }}">repository</a>...</p>
          </body>
          </html>
          EOF

            # Create empty index.yaml
            cat > index.yaml <<EOF
          apiVersion: v1
          entries: {}
          generated: "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          EOF

            git add .nojekyll index.html index.yaml
            git commit -m "Initialize gh-pages branch"
            git push origin gh-pages

            # Switch back to main
            git checkout main
          else
            echo "gh-pages branch already exists"
          fi

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: helm
          config: .github/cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Update Helm repository index
        run: |
          cd gh-pages

          # Ensure .nojekyll exists
          touch .nojekyll

          # Get chart info
          CHART_VERSION=$(grep '^version:' ../helm/multi-platform-demo/Chart.yaml | awk '{print $2}')
          CHART_NAME=$(grep '^name:' ../helm/multi-platform-demo/Chart.yaml | awk '{print $2}')
          APP_VERSION=$(grep '^appVersion:' ../helm/multi-platform-demo/Chart.yaml | awk '{print $2}' | tr -d '"')
          DESCRIPTION=$(grep '^description:' ../helm/multi-platform-demo/Chart.yaml | cut -d' ' -f2-)
          CREATED=$(date -u +"%Y-%m-%dT%H:%M:%S.000000000Z")

          # Create/update index.yaml
          cat > index.yaml <<EOF
          apiVersion: v1
          entries:
            $CHART_NAME:
            - apiVersion: v2
              appVersion: "$APP_VERSION"
              created: "$CREATED"
              description: $DESCRIPTION
              name: $CHART_NAME
              type: application
              urls:
              - https://github.com/${{ github.repository }}/releases/download/$CHART_NAME-$CHART_VERSION/$CHART_NAME-$CHART_VERSION.tgz
              version: $CHART_VERSION
          generated: "$CREATED"
          EOF

          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .nojekyll index.yaml

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update Helm repository index for $CHART_NAME $CHART_VERSION"
            git push origin gh-pages
          fi

      - name: Copy landing page
        run: |
          if [ -f docs/index.html ]; then
            cp docs/index.html gh-pages/index.html
            cd gh-pages
            git config user.name "$GITHUB_ACTOR"
            git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
            git add index.html
            if git diff --staged --quiet; then
              echo "No changes to landing page"
            else
              git commit -m "Update landing page"
              git push origin gh-pages
            fi
          fi
